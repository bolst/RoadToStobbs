@inject NavigationManager navManager
@inject IJSRuntime JSRuntime

@if (GameData != null)
{
    string home_team = Api.Teams.Instance().TeamIdNameMap[GameData.home_team];
    string away_team = Api.Teams.Instance().TeamIdNameMap[GameData.visiting_team];
    string home_team_stripped = new string(home_team.ToCharArray().Where(c => !Char.IsWhiteSpace(c)).ToArray());
    string away_team_stripped = new string(away_team.ToCharArray().Where(c => !Char.IsWhiteSpace(c)).ToArray());
    string home_logo = $"logos/{home_team_stripped}.png";
    string away_logo = $"logos/{away_team_stripped}.png";
    <Row Width="Width.Is100" Margin="Margin.IsAuto">
        <div @onclick="@(e => NavToGame(GameData.game_id))" style="cursor: pointer">
            <Card>
                <CardBody TextAlignment="TextAlignment.Center">
                    <Row>
                        @if (!IsMobile)
                        {
                            <Column>
                            </Column>
                        }
                        <Column>
                            <Figure Size="FigureSize.Is64x64" Position="Position.Relative.Top.Is50.Translate.MiddleY">
                                <FigureImage Source="@home_logo" />
                            </Figure>
                        </Column>
                        <Column>
                            <Heading Position="Position.Relative.Top.Is50.Translate.MiddleY"
                                Padding="Padding.Is3.FromBottom">
                                @GameData.home_goal_count -
                                @GameData.visiting_goal_count</Heading>
                            <Text>@FormatDateTime(GameData.date_time)</Text>
                        </Column>
                        <Column>
                            <Figure Size="FigureSize.Is64x64" Position="Position.Relative.Top.Is50.Translate.MiddleY">
                                <FigureImage Source="@away_logo" />
                            </Figure>
                        </Column>

                        @if (!IsMobile)
                        {
                            <Column>
                            </Column>
                        }
                    </Row>
                </CardBody>
            </Card>
        </div>
    </Row>
}

@code {
    [Parameter] public Data.Game GameData { get; set; } = null;

    private bool IsMobile { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        IsMobile = await JSRuntime.InvokeAsync<bool>("isDevice");
    }

    private string FormatDateTime(string date_time)
    {
        string pattern = "yyyy-MM-dd HH:mm:ss";
        DateTime parsedDate;

        if (DateTime.TryParseExact(date_time, pattern, null, System.Globalization.DateTimeStyles.None, out parsedDate))
        {
            return parsedDate.ToString("MMM dd hh:mm tt");
        }
        return date_time;
    }

    private void NavToGame(string game_id)
    {
        navManager.NavigateTo($"https://www.thepjhl.ca/stats/game-summary/{game_id}");
    }
}